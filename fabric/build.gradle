plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'com.xinecraft'
version = '5.0.0-fabric'
description = 'Minetrax - Fabric'
def targetJavaVersion = 11

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = uri('https://maven.fabricmc.net/') } // Fabric Maven repository
}

dependencies {
    implementation 'net.fabricmc:fabric-api:0.42.9+1.18'

    implementation 'commons-codec:commons-codec:1.15'

    compileOnly 'io.netty:netty-all:4.1.86.Final'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

}


java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

shadowJar {
    relocate('org.bstats', 'com.xinecraft.minetrax.bstats')
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('fabric.mod.json') {
        expand props
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}