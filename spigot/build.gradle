plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'com.xinecraft'
version = '5.0.0-spigot'
description = 'Minetrax - Spigot'
def targetJavaVersion = 11

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = uri('https://jitpack.io') }
    maven { url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/') }
    maven { url = uri('https://oss.sonatype.org/content/groups/public/') }
    maven { url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/') }
    maven { url = uri('https://repo.viaversion.com') }
    maven { url = uri('https://repo.codemc.org/repository/maven-public/') }
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
}

dependencies {
    implementation 'org.bukkit:bukkit:1.18.1-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'org.jetbrains:annotations:22.0.0'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.17.2'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'com.viaversion:viaversion-api:4.7.0'
    compileOnly 'net.skinsrestorer:skinsrestorer-api:15.0.6'
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

shadowJar {
    relocate('org.bstats', 'com.xinecraft.minetrax.bstats')
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
